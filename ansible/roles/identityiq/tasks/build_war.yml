---
- name: Include github encrypted variables.
  ansible.builtin.include_vars: "secrets.yml"

- name: Ensure git command is installed
  ansible.builtin.package:
    name: git
    state: present

- name: Ensure ant command is installed
  ansible.builtin.package:
    name: ant
    state: present

- name: Checkout repo
  ansible.builtin.git:
    repo: "https://{{ git_user }}:{{ git_pat }}@{{ identityiq_repo_url }}"
    dest: "{{ identityiq_git_dest }}"
    version: main
    force: true

- name: Create custom exports folder
  ansible.builtin.file:
    path: "{{ identityiq_git_dest }}/config/custom"
    owner: tomcat
    group: tomcat
    state: directory
    mode: "0774"

- name: Checkout exports repo
  ansible.builtin.git:
    repo: "https://{{ git_user }}:{{ git_pat }}@{{ identityiq_exports_repo_url }}"
    dest: "{{ identityiq_git_dest }}/config/custom"
    version: main
    force: true
  when:
    - identityiq_import_custom is defined
    - identityiq_import_custom is true

- name: Change ownership of folder to sailpoint
  ansible.builtin.file:
    path: "{{ identityiq_git_dest }}"
    state: directory
    recurse: true
    owner: sailpoint
    group: sailpoint

- name: Copy identityiq.zip file
  ansible.builtin.copy:
    src: "identityiq-{{ identityiq_version }}.zip"
    dest: "{{ identityiq_git_dest }}/base/ga/"
    owner: sailpoint
    group: sailpoint
    mode: "0644"

- name: Copy patch file
  ansible.builtin.copy:
    src: "identityiq-{{ identityiq_version }}{{ identityiq_patch_version }}.jar"
    dest: "{{ identityiq_git_dest }}/base/patch/"
    owner: sailpoint
    group: sailpoint
    mode: "0644"
  when: identityiq_patch_version is defined

- name: Create ETS version folder
  ansible.builtin.file:
    path: "{{ identityiq_git_dest }}/base/efix/{{ identityiq_version }}{{ identityiq_patch_version }}"
    owner: sailpoint
    group: sailpoint
    state: directory
    mode: "0774"
  when: identityiq_ets_version is defined

- name: Copy ETS file
  ansible.builtin.copy:
    src: "identityiq-{{ identityiq_version }}-{{ identityiq_version }}{{ identityiq_patch_version }}-{{ identityiq_ets_version }}.zip"
    dest: "{{ identityiq_git_dest }}/base/efix/{{ identityiq_version }}{{ identityiq_patch_version }}"
    owner: sailpoint
    group: sailpoint
    mode: "0644"
  when: identityiq_ets_version is defined

- name: Copy build.properties file
  ansible.builtin.template:
    src: "build.properties.j2"
    dest: "{{ identityiq_git_dest }}/build.properties"
    owner: sailpoint
    group: sailpoint
    mode: "0644"

- name: Copy build.properties file (hostname)
  ansible.builtin.template:
    src: "build.properties.j2"
    dest: "{{ identityiq_git_dest }}/{{ hostname }}.build.properties"
    owner: sailpoint
    group: sailpoint
    mode: "0644"

- name: Copy target.properties file
  ansible.builtin.template:
    src: "target.properties.j2"
    dest: "{{ identityiq_git_dest }}/{{ hostname }}.target.properties"
    owner: sailpoint
    group: sailpoint
    mode: "0644"

- name: Copy iiq.properties file
  ansible.builtin.template:
    src: "iiq.properties.j2"
    dest: "{{ identityiq_git_dest }}/{{ hostname }}.iiq.properties"
    owner: sailpoint
    group: sailpoint
    mode: "0644"

- name: ensure build.sh is executable
  ansible.builtin.file:
    path: "{{ identityiq_git_dest }}/build.sh"
    mode: "u=rwx,g=rx,o=rx"

- name: Build war file
  ansible.builtin.command: ant clean war
  args:
    chdir: "{{ identityiq_git_dest }}"
  environment:
    SPTARGET: "{{ hostname }}"
  register: cmdout
  changed_when: cmdout.rc != 0

- name: Change ownership to sailpoint user
  ansible.builtin.file:
    path: "{{ identityiq_git_dest }}"
    owner: sailpoint
    group: sailpoint
    recurse: true
