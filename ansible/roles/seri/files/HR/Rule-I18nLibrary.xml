<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="I18n Library">
  <Source>
    <![CDATA[
 
String interString(String in) {
  String out = in;
  char[] chars = out.toCharArray();
  Character.UnicodeBlock unicodeBlock = null;
  String[][] charMap = {
    {"\241", "?", "\241"},   {"\242", "c", "\242"},
    {"\243", "?", "\243"},   {"\244", "?", "\244"},
    {"\245", "Y", "\245"},   {"\246", "?", "\246"},
    {"\247", "?", "\247"},   {"\250", "?", "\250"},
    {"\251", "(c)", "\251"}, {"\252", "?", "\252"},
    {"\253", "<<", "\253"},  {"\254", "?", "\254"},
    {"\255", "-", "\255"},   {"\256", "(R)", "\256"},
    {"\257", "?", "\257"},   {"\260", "?", "\260"},
    {"\261", "?", "\261"},   {"\262", "2", "\262"},
    {"\263", "3", "\263"},   {"\264", "?", "\264"},
    {"\265", "u", "\265"},   {"\266", "?", "\266"},
    {"\267", ".", "\267"},   {"\270", "?", "\270"},
    {"\271", "1", "\271"},   {"\272", "?", "\272"},
    {"\273", ">>", "\273"},   {"\274", "1/4", "\274"},
    {"\275", "1/2", "\275"}, {"\276", "3/4", "\276"},
    {"\277", "?", "\277"},   {"\300", "A", "\300"},
    {"\301", "A", "\301"},   {"\302", "A", "\302"},
    {"\303", "A", "\303"},   {"\304", "Ae", "\304"},
    {"\305", "A", "\305"},   {"\306", "Ae", "\306"},
    {"\307", "C", "\307"},   {"\310", "E", "\310"},
    {"\311", "E", "\311"},   {"\312", "E", "\312"},
    {"\313", "E", "\313"},   {"\314", "I", "\314"},
    {"\315", "I", "\315"},   {"\316", "I", "\316"},
    {"\317", "I", "\317"},   {"\320", "D", "\320"},
    {"\321", "N", "\321"},   {"\322", "O", "\322"},
    {"\323", "O", "\323"},   {"\324", "O", "\324"},
    {"\325", "O", "\325"},   {"\326", "Oe", "\326"},
    {"\327", "*", "\327"},   {"\330", "O", "\330"},
    {"\331", "U", "\331"},   {"\332", "U", "\332"},
    {"\333", "U", "\333"},   {"\334", "Ue", "\334"},
    {"\335", "Y", "\335"},   {"\336", "?", "\336"},
    {"\337", "ss", "\337"},  {"\340", "a", "\340"},
    {"\341", "a", "\341"},   {"\342", "a", "\342"},
    {"\343", "a", "\343"},   {"\344", "ae", "\344"},
    {"\345", "a", "\345"},   {"\346", "ae", "\346"},
    {"\347", "c", "\347"},   {"\350", "e", "\350"},
    {"\351", "e", "\351"},   {"\352", "e", "\352"},
    {"\353", "e", "\353"},   {"\354", "i", "\354"},
    {"\355", "i", "\355"},   {"\356", "i", "\356"},
    {"\357", "i", "\357"},   {"\360", "?", "\360"},
    {"\361", "n", "\361"},   {"\362", "o", "\362"},
    {"\363", "o", "\363"},   {"\364", "o", "\364"},
    {"\365", "o", "\365"},   {"\366", "oe", "\366"},
    {"\367", "/", "\367"},   {"\370", "?", "\370"},
    {"\371", "u", "\371"},   {"\372", "u", "\372"},
    {"\373", "u", "\373"},   {"\374", "ue", "\374"},
    {"\375", "y", "\375"},   {"\376", "?", "\376"}
  };
  String specChars = "";
  for(int z = 0; z < charMap.length; z++)
  specChars = specChars + charMap[z][0];

  for(int i = 0; i < chars.length; i++) {
     if(!Character.UnicodeBlock.of(chars[i]).toString().equals("BASIC_LATIN")) {
        out = out.substring(0, i) + charMap[specChars.indexOf(chars[i])][1] + out.substring(i + 1);
        chars = out.toCharArray();
     }
  }
  return out;
}
    ]]>
  </Source>
</Rule>